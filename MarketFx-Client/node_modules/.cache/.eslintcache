[{"C:\\Users\\HP\\Desktop\\MarketFx\\client\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\MarketFx\\client\\src\\App.js":"2","C:\\Users\\HP\\Desktop\\MarketFx\\client\\src\\reportWebVitals.js":"3","C:\\Users\\HP\\Desktop\\MarketFx\\client\\src\\utilities\\Forms.js":"4","C:\\Users\\HP\\Desktop\\MarketFx\\client\\src\\box.js":"5","C:\\Users\\HP\\Desktop\\MarketFx\\client\\src\\screens\\Login.js":"6","C:\\Users\\HP\\Desktop\\MarketFx\\client\\src\\screens\\Register.js":"7","C:\\Users\\HP\\Desktop\\MarketFx\\client\\src\\screens\\Forgot.js":"8","C:\\Users\\HP\\Desktop\\MarketFx\\client\\src\\screens\\home.js":"9"},{"size":531,"mtime":1670259991037,"results":"10","hashOfConfig":"11"},{"size":631,"mtime":1670486212176,"results":"12","hashOfConfig":"11"},{"size":377,"mtime":1670278945710,"results":"13","hashOfConfig":"11"},{"size":2465,"mtime":1670260049233,"results":"14","hashOfConfig":"11"},{"size":615,"mtime":1670319514817,"results":"15","hashOfConfig":"11"},{"size":6346,"mtime":1670486358555,"results":"16","hashOfConfig":"11"},{"size":7541,"mtime":1670486371485,"results":"17","hashOfConfig":"11"},{"size":3281,"mtime":1670486544916,"results":"18","hashOfConfig":"11"},{"size":1134,"mtime":1670490715099,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1lppu0",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\HP\\Desktop\\MarketFx\\client\\src\\index.js",[],["41","42"],"C:\\Users\\HP\\Desktop\\MarketFx\\client\\src\\App.js",[],"C:\\Users\\HP\\Desktop\\MarketFx\\client\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Desktop\\MarketFx\\client\\src\\utilities\\Forms.js",[],"C:\\Users\\HP\\Desktop\\MarketFx\\client\\src\\box.js",["43"],"import { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Box=(props)=>{\r\n     return(\r\n        <div className=\"d-flex flex-row align-content-end justify-content-between bg-secondary text-white w-100 py-1 mx-1 px-4 b-2 \"\r\n        style={{\r\n            \r\n            borderRadius:10,\r\n        }}>\r\n            <div style={{borderWidth:1,borderColor:'black',fontWeight:\"bold\"}}> \r\n                <p>{props.Title}</p>\r\n                <p>{props.Cateory}</p>\r\n            </div>\r\n            <div> \r\n                <p>{props.Price}</p>\r\n                \r\n            </div>\r\n        </div>\r\n     );\r\n};\r\nexport default Box;","C:\\Users\\HP\\Desktop\\MarketFx\\client\\src\\screens\\Login.js",[],"C:\\Users\\HP\\Desktop\\MarketFx\\client\\src\\screens\\Register.js",["44"],"import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Form from \"./../utilities/Forms\";\r\nimport axios from \"axios\";\r\nconst Register = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [validate, setValidate] = useState({});\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [contactNumber, setContactNumber] = useState(\"\");\r\n  const validateRegister = () => {\r\n    let isValid = true;\r\n\r\n    let validator = Form.validator({\r\n      name: {\r\n        value: name,\r\n        isRequired: true,\r\n      },\r\n      email: {\r\n        value: email,\r\n        isRequired: true,\r\n        isEmail: true,\r\n      },\r\n      password: {\r\n        value: password,\r\n        isRequired: true,\r\n        minLength: 6,\r\n      },\r\n    });\r\n\r\n    if (validator !== null) {\r\n      setValidate({\r\n        validate: validator.errors,\r\n      });\r\n\r\n      isValid = false;\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  const register = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const validate = validateRegister();\r\n\r\n    if (validate) {\r\n      try {\r\n        alert(contactNumber);\r\n        const response = await fetch(\r\n          \"http://307e-206-84-151-86.ngrok.io/user/register\",\r\n          {\r\n            method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n\r\n            body: JSON.stringify({ name, password, email, contactNumber }),\r\n          }\r\n        );\r\n\r\n        alert(response.data);\r\n      } catch (ex) {\r\n        alert(ex.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const togglePassword = (e) => {\r\n    if (showPassword) {\r\n      setShowPassword(false);\r\n    } else {\r\n      setShowPassword(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row g-0 auth-wrapper\">\r\n      <div className=\"col-12 col-md-5 col-lg-6 h-100 auth-background-col\">\r\n        <div className=\"auth-background-holder\"></div>\r\n        <div className=\"auth-background-mask\"></div>\r\n      </div>\r\n\r\n      <div className=\"col-12 col-md-7 col-lg-6 auth-main-col text-center\">\r\n        <div className=\"d-flex flex-column align-content-end\">\r\n          <div className=\"auth-body mx-auto\">\r\n            <p>Create your Account</p>\r\n            <div className=\"auth-form-container text-start\">\r\n              <form\r\n                className=\"auth-form\"\r\n                method=\"POST\"\r\n                onSubmit={register}\r\n                autoComplete={\"off\"}\r\n              >\r\n                <div className=\"name mb-3\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={`form-control ${\r\n                      validate.validate && validate.validate.name\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Name\"\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  />\r\n\r\n                  <div\r\n                    className={`invalid-feedback text-start ${\r\n                      validate.validate && validate.validate.name\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                  >\r\n                    {validate.validate && validate.validate.name\r\n                      ? validate.validate.name[0]\r\n                      : \"\"}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"email mb-3\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={`form-control ${\r\n                      validate.validate && validate.validate.email\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    placeholder=\"Email\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n\r\n                  <div\r\n                    className={`invalid-feedback text-start ${\r\n                      validate.validate && validate.validate.email\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                  >\r\n                    {validate.validate && validate.validate.email\r\n                      ? validate.validate.email[0]\r\n                      : \"\"}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"password mb-3\">\r\n                  <div className=\"input-group\">\r\n                    <input\r\n                      type={showPassword ? \"text\" : \"password\"}\r\n                      className={`form-control ${\r\n                        validate.validate && validate.validate.password\r\n                          ? \"is-invalid \"\r\n                          : \"\"\r\n                      }`}\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      value={password}\r\n                      placeholder=\"Password\"\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-outline-primary btn-sm\"\r\n                      onClick={(e) => togglePassword(e)}\r\n                    >\r\n                      <i\r\n                        className={\r\n                          showPassword ? \"far fa-eye\" : \"far fa-eye-slash\"\r\n                        }\r\n                      ></i>{\" \"}\r\n                    </button>\r\n\r\n                    <div\r\n                      className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.password\r\n                          ? \"d-block\"\r\n                          : \"d-none\"\r\n                      }`}\r\n                    >\r\n                      {validate.validate && validate.validate.password\r\n                        ? validate.validate.password[0]\r\n                        : \"\"}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"password mb-3\">\r\n                  <div className=\"input-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={`form-control ${\r\n                        validate.validate && validate.validate.password\r\n                          ? \"is-invalid \"\r\n                          : \"\"\r\n                      }`}\r\n                      name=\"tel\"\r\n                      id=\"password\"\r\n                      value={contactNumber}\r\n                      placeholder=\"Phone Number\"\r\n                      onChange={(e) => setContactNumber(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"text-center\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary w-100 theme-btn mx-auto\"\r\n                  >\r\n                    Sign Up\r\n                  </button>\r\n                </div>\r\n              </form>\r\n\r\n              <hr />\r\n              <div className=\"auth-option text-center pt-2\">\r\n                Have an account?{\" \"}\r\n                <Link className=\"text-link\" to=\"/login\">\r\n                  Sign in\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\HP\\Desktop\\MarketFx\\client\\src\\screens\\Forgot.js",[],"C:\\Users\\HP\\Desktop\\MarketFx\\client\\src\\screens\\home.js",["45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":10,"nodeType":"52","messageId":"53","endLine":1,"endColumn":14},{"ruleId":"50","severity":1,"message":"54","line":4,"column":8,"nodeType":"52","messageId":"53","endLine":4,"endColumn":13},{"ruleId":"50","severity":1,"message":"55","line":1,"column":10,"nodeType":"52","messageId":"53","endLine":1,"endColumn":17},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'NavLink' is defined but never used.","no-global-assign","no-unsafe-negation"]