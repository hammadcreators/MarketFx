{"ast":null,"code":"class Form {\n  /**\r\n   * Validate Login\r\n   * @param str\r\n   * @returns boolean\r\n   */\n  static validEmail(str) {\n    let regex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n    return regex.test(str);\n  }\n\n  /**\r\n   * Minimum length of string\r\n   * @param str\r\n   * @param length\r\n   * @returns\r\n   */\n  static minLength(str, length) {\n    let isInvalid = false;\n    if (str.length < length) {\n      isInvalid = true;\n    }\n    return isInvalid;\n  }\n\n  /**\r\n   * Form Validator\r\n   * @param  obj\r\n   * @returns\r\n   */\n  static validator(obj) {\n    let keys = Object.entries(obj);\n    let results = [];\n    let validations = null;\n    keys.map(key => {\n      if (\"isRequired\" in key[1] && key[1].isRequired) {\n        if (key[1].value.length === 0) {\n          results.push({\n            [key[0]]: [`The ${key[0]} is required.`]\n          });\n        } else {\n          if (\"isEmail\" in key[1] && key[1].isEmail) {\n            let isValidEmail = Form.validEmail(key[1].value);\n            if (!isValidEmail) {\n              results.push({\n                [key[0]]: [`The ${key[0]} must be valid email.`]\n              });\n            }\n          }\n          if (\"minLength\" in key[1] && Form.minLength(key[1].value, key[1].minLength)) {\n            results.push({\n              [key[0]]: [`The ${key[0]} must at least ${key[1].minLength} characters.`]\n            });\n          }\n        }\n      } else if (\"isEmail\" in key[1]) {\n        let isValidEmail = Form.validEmail(key[1].value);\n        if (!isValidEmail) {\n          results.push({\n            [key[0]]: [`The ${key[0]} must be valid email`]\n          });\n        }\n      } else if (\"minLength\" in key[1] && Form.minLength(key[1].value, key[1].minLength)) {\n        results.push({\n          [key[0]]: [`The ${key[0]} must at least ${key[1].minLength} characters.`]\n        });\n      }\n      return results;\n    });\n    results = Object.assign({}, ...results.map(result => result));\n    if (Object.keys(results).length > 0) {\n      validations = {\n        errors: results\n      };\n    } else {\n      validations = null;\n    }\n    return validations;\n  }\n}\nexport default Form;","map":{"version":3,"names":["Form","validEmail","str","regex","test","minLength","length","isInvalid","validator","obj","keys","Object","entries","results","validations","map","key","isRequired","value","push","isEmail","isValidEmail","assign","result","errors"],"sources":["C:/Users/HP/Desktop/MarketFx/react-authentication-page-template/src/utilities/Forms.js"],"sourcesContent":["\r\n\r\nclass Form {\r\n  /**\r\n   * Validate Login\r\n   * @param str\r\n   * @returns boolean\r\n   */\r\n  static validEmail(str) {\r\n    let regex =\r\n      /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\r\n    return regex.test(str);\r\n  }\r\n\r\n  /**\r\n   * Minimum length of string\r\n   * @param str\r\n   * @param length\r\n   * @returns\r\n   */\r\n  static minLength(str, length) {\r\n    let isInvalid = false;\r\n\r\n    if (str.length < length) {\r\n      isInvalid = true;\r\n    }\r\n\r\n    return isInvalid;\r\n  }\r\n\r\n  /**\r\n   * Form Validator\r\n   * @param  obj\r\n   * @returns\r\n   */\r\n  static validator(obj) {\r\n    let keys = Object.entries(obj);\r\n    let results = [];\r\n    let validations = null;\r\n\r\n    keys.map((key) => {\r\n      if (\"isRequired\" in key[1] && key[1].isRequired) {\r\n        if (key[1].value.length === 0) {\r\n          results.push({\r\n            [key[0]]: [`The ${key[0]} is required.`],\r\n          });\r\n        } else {\r\n          if (\"isEmail\" in key[1] && key[1].isEmail) {\r\n            let isValidEmail = Form.validEmail(key[1].value);\r\n\r\n            if (!isValidEmail) {\r\n              results.push({\r\n                [key[0]]: [`The ${key[0]} must be valid email.`],\r\n              });\r\n            }\r\n          }\r\n\r\n          if (\r\n            \"minLength\" in key[1] &&\r\n            Form.minLength(key[1].value, key[1].minLength)\r\n          ) {\r\n            results.push({\r\n              [key[0]]: [\r\n                `The ${key[0]} must at least ${key[1].minLength} characters.`,\r\n              ],\r\n            });\r\n          }\r\n        }\r\n      } else if (\"isEmail\" in key[1]) {\r\n        let isValidEmail = Form.validEmail(key[1].value);\r\n\r\n        if (!isValidEmail) {\r\n          results.push({\r\n            [key[0]]: [`The ${key[0]} must be valid email`],\r\n          });\r\n        }\r\n      } else if (\r\n        \"minLength\" in key[1] &&\r\n        Form.minLength(key[1].value, key[1].minLength)\r\n      ) {\r\n        results.push({\r\n          [key[0]]: [\r\n            `The ${key[0]} must at least ${key[1].minLength} characters.`,\r\n          ],\r\n        });\r\n      }\r\n      return results;\r\n    });\r\n\r\n    results = Object.assign({}, ...results.map((result) => result));\r\n\r\n    if (Object.keys(results).length > 0) {\r\n      validations = {\r\n        errors: results,\r\n      };\r\n    } else {\r\n      validations = null;\r\n    }\r\n\r\n    return validations;\r\n  }\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}